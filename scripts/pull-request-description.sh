#!/bin/bash

GITHUB_USERNAME="$1"
GITHUB_AUTH_TOKEN="$2"
REPO_NAME="$3"
PULL_REQUEST_ID="$4"

# generate changelogs and update version
lerna version --conventional-commits --no-git-tag-version --no-push --yes

# extract changelogs
CHANGELOGS=$(git diff HEAD --unified=0 --no-prefix -- '*CHANGELOG.md' | # get changes from CHANGELOG files
    grep -E "^\+" | # get only additions from git diff
    sed 's/^.//' |  # remove '+' from beginning of each line
    sed -E ':a;N;$!ba;s/\r{0,1}\n/\\n/g' # replace linebreaks with '\n' for curl
)

# extract version changes
VERSIONS=$(git diff HEAD --unified=0 --no-prefix --relative='packages' '*package.json' | # get changes from package.json files
    grep -E "(\"version\": |\+\+\+)" | # get filenames and "version" change
    sed -E ':a;N;$!ba;s/\r{0,1}\n/\\n/g' | # replace linebreaks with '\n'
    sed 's/"/\\"/g' # replace '"' with '\"' for curl
)

# get pull request info
PULL_REQUEST=$(curl -s \
  -H "Accept: application/vnd.github.v3+json" \
  https://api.github.com/repos/"${GITHUB_USERNAME}"/"${REPO_NAME}"/pulls/"${PULL_REQUEST_ID}")

PULL_REQUEST_DESCRIPTION=$(echo "${PULL_REQUEST}" |
    grep body | # get string with body from response
    cut -d ':' -f 2 | # get body value
    cut -d '"' -f 2 | # get body without double quotes
    awk -F'<!-- Autogenerated -->' '{print $1}' # get only original pull request description without autogenerated info
)

# compose pull request description
BODY="$PULL_REQUEST_DESCRIPTION"'<!-- Autogenerated -->\n\n\n---\n## Upcoming release changes\n> Each branch build will replace this description.\n\n'

if [ -n "$VERSIONS" ]
then
    BODY+='### Version updates:\n'"\`\`\`"'\n'"$VERSIONS"'\n'"\`\`\`"'\n'
else
    BODY+='### Version updates:\nNo version changes detected.\n'
fi

if [ -n "$CHANGELOGS" ]
then
    BODY+='### Change logs:\n'"$CHANGELOGS"
else
    BODY+='### Change logs:\nNo updates detected.\n'
fi

BODY='{"body":"'"$BODY"'"}'

# update pull request description
curl \
  --silent \
  -X PATCH \
  -H "Accept: application/vnd.github.v3+json" \
  -u "${GITHUB_USERNAME}:${GITHUB_AUTH_TOKEN}" \
  https://api.github.com/repos/"${GITHUB_USERNAME}"/"${REPO_NAME}"/pulls/"${PULL_REQUEST_ID}" \
  -d "${BODY}"

# rollback changes in working tree
git reset --hard

echo "Pull request description updated."
